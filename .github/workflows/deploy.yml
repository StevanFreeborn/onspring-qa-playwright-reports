name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '.vscode/**'
      - '.husky/**'
      - '.eslintrc.json'
      - '.gitignore'
      - '.prettierrc.json'
      - '.prettierignore'
      - 'README.md'
      - 'LICENSE.md'
      - 'babel.config.cjs'
      - 'docker-compose.dev.yml'
      - 'example.env'
      - 'jest.config.mjs'
      - 'jsconfig.json'
      - 'playwright.config.js'
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Create version tag
        id: version
        run: echo "version=$(date +%Y.%m.%d.%H%M%S)" >> $GITHUB_OUTPUT
      - name: Build Docker image
        run: |
          TAG=${{ secrets.DOCKERHUB_USERNAME }}/onspringqareports.stevanfreeborn.com:${{ steps.version.outputs.version }}
          docker build -t $TAG .
          docker push $TAG
  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run image on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd onspringqareports.stevanfreeborn.com
            
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
            echo "CSRF_SECRET=${{ secrets.CSRF_SECRET }}" >> .env
            echo "COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}" >> .env
            echo "NODE_ENV=production" >> .env
            echo "LOGTAIL_SOURCE_TOKEN=${{ secrets.LOGTAIL_SOURCE_TOKEN }}" >> .env
            echo "EMAIL_JS_SERVICE_ID=${{ secrets.EMAIL_JS_SERVICE_ID }}" >> .env
            echo "EMAIL_JS_PUBLIC_KEY=${{ secrets.EMAIL_JS_PUBLIC_KEY }}" >> .env
            echo "EMAIL_JS_PRIVATE_KEY=${{ secrets.EMAIL_JS_PRIVATE_KEY }}" >> .env
            echo "NEW_ACCOUNT_EMAIL_TEMPLATE_ID=${{ secrets.NEW_ACCOUNT_EMAIL_TEMPLATE_ID }}" >> .env
            echo "FORGOT_PASSWORD_EMAIL_TEMPLATE_ID=${{ secrets.FORGOT_PASSWORD_EMAIL_TEMPLATE_ID }}" >> .env
            
            docker stop onspringqareports.stevanfreeborn.com
            docker rm onspringqareports.stevanfreeborn.com
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/onspringqareports.stevanfreeborn.com:${{ needs.build.outputs.version }}
            docker run \
              --name onspringqareports.stevanfreeborn.com \
              -v ./reports:/app/reports \
              -v ./db:/app/db \
              -p 9999:3000 \
              -restart always \
              --env-file .env \
              -d \
              ${{ secrets.DOCKERHUB_USERNAME }}/onspringqareports.stevanfreeborn.com:${{ needs.build.outputs.version }}
            
            rm .env
